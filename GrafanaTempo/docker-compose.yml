networks:
  demo:
    driver: bridge

services:
  tempo:
    image: grafana/tempo:2.8.2
    hostname: tempo
    container_name: tempo
    restart: always
    command: ["-config.file=/etc/tempo.yml"]
    volumes:
      - ./Tempo/tempo.yml:/etc/tempo.yml
    ports:
      - 3200:3200 # tempo
      - 4317:4317 # otlp grpc
      - 4318:4318 # otlp http
    networks:
      - demo
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--quiet",
          "--tries=1",
          "--spider",
          "http://localhost:3200/ready",
        ]
      interval: 10s
      timeout: 10s
      start_period: 15s
      retries: 10

  grafana:
    image: grafana/grafana:12.1.0
    container_name: grafana
    environment:
      TZ: Europe/Lisbon
      GF_AUTH_ANONYMOUS_ENABLED: true # Allow anonymous access
      GF_AUTH_ANONYMOUS_ORG_ROLE: Admin # Set the role for anonymous users to Admin
      GF_AUTH_BASIC_ENABLED: false # Disable basic auth
      GF_FEATURE_TOGGLES_ENABLE: traceqlEditor
    ports:
      - 3000:3000
    volumes:
      - ./Grafana/data-source.yml:/etc/grafana/provisioning/datasources/data-source.yml # Data source configurations
      - ./Grafana/dashboards:/etc/grafana/provisioning/dashboards # Folder containing dashboards
      - ./Grafana/dashboard.yml:/etc/grafana/provisioning/dashboards/dashboard.yml # Dashboard configurations
    networks:
      - demo
    depends_on:
      tempo:
        condition: service_healthy

  telemetrygen:
    image: golang:1.25.0
    container_name: telemetrygen
    stdin_open: true
    tty: true
    working_dir: /go
    command: >
      bash -c "
      go install github.com/open-telemetry/opentelemetry-collector-contrib/cmd/telemetrygen@latest &&
      exec /bin/bash"
    networks:
      - demo
